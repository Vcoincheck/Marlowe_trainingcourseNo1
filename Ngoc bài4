{-# LANGUAGE OverloadedStrings #-}
module Example where

import Language.Marlowe.Extended.V1

main :: IO ()
main = printJSON example


{- Define a contract, Close is the simplest contract which just ends the contract straight away
-}

chodoanhnghiepdeposit = (TimeParam "time_param")

doanhnghiep = (Role "doanhnghiep")
tongtienluong = (ConstantParam "tienluong")
luongthuclanh = (Constant 1000000000)

thanhtoan vinhanvien  = Pay
            doanhnghiep
            vinhanvien
            ada
            luongthuclanh

vinhanvien1 = (Party (Role "nhanvien1"))
vinhanvien2 = (Party (Role "nhanvien2"))
vinhanvien3 = (Party (Role "nhanvien3"))
vinhanvien4 = (Party (Role "nhanvien4"))
vinhanvien5 = (Party (Role "nhanvien5"))
vinhanvien6 = (Party (Role "nhanvien6"))
vinhanvien7 = (Party (Role "nhanvien7"))
vinhanvien8 = (Party (Role "nhanvien8"))
vinhanvien9 = (Party (Role "nhanvien9"))
vinhanvien10 = (Party (Role "nhanvien10"))






example :: Contract
example = When
    [Case
        (Deposit
            doanhnghiep
            doanhnghiep
            ada
            tongtienluong
        )
        (thanhtoan vinhanvien1
            (thanhtoan vinhanvien2     
                (thanhtoan vinhanvien3 
                    (thanhtoan vinhanvien4
                        (thanhtoan vinhanvien5
                           (thanhtoan vinhanvien6
                                (thanhtoan vinhanvien7
                                    (thanhtoan vinhanvien8    
                                        (thanhtoan vinhanvien9
                                            (thanhtoan vinhanvien10
                                                Close 
                                            )
                                        )    
                                    )      
                                )    
                            ) 
                        )      
                    )    
                )         
            )
        )]
    chodoanhnghiepdeposit
    Close 
